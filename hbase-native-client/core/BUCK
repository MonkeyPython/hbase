##
# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main library.
cxx_library(
    name="core",
    exported_headers=[
        "client.h",
        "cell.h",
        "hbase_macros.h",
        "keyvalue-codec.h",
        "region-location.h",
        "location-cache.h",
        # TODO: move this out of exported
        # Once meta lookup works
        "meta-utils.h",
        "get.h",
        "time_range.h",
        "configuration.h",
        "hbase_configuration_loader.h",
        "scan.h",
        "result.h",
        "request_converter.h",
        "response_converter.h",
        "table.h",
    ],
    srcs=[
        "cell.cc",
        "client.cc",
        "keyvalue-codec.cc",
        "location-cache.cc",
        "meta-utils.cc",
        "get.cc",
        "time_range.cc",
        "configuration.cc",
        "hbase_configuration_loader.cc",
        "scan.cc",
        "result.cc",
        "request_converter.cc",
        "response_converter.cc",
        "table.cc",
    ],
    deps=[
        "//connection:connection",
        "//if:if",
        "//serde:serde",
        "//third-party:folly",
        "//third-party:wangle",
        "//third-party:zookeeper_mt",
    ],
    compiler_flags=['-Weffc++'],
    visibility=['PUBLIC',],)
cxx_test(
    name="location-cache-test",
    srcs=["location-cache-test.cc",],
    deps=[
        ":core",
        "//test-util:test-util",
    ],
    run_test_separately=True,)
cxx_test(
    name="cell-test",
    srcs=["cell-test.cc",],
    deps=[":core",],
    run_test_separately=True,)
cxx_test(
    name="get-test",
    srcs=["get-test.cc",],
    deps=[":core",],
    run_test_separately=True,)
cxx_test(
    name="time_range-test",
    srcs=["time_range-test.cc",],
    deps=[":core",],
    run_test_separately=True,)
cxx_test(
    name="configuration-test",
    srcs=["configuration-test.cc",],
    deps=[":core",],
    run_test_separately=True,)
cxx_test(
    name="hbase_configuration-test",
    srcs=["hbase_configuration-test.cc",],
    deps=[":core",],
    run_test_separately=True,)
cxx_test(
    name="scan-test",
    srcs=["scan-test.cc",],
    deps=[":core",],
    run_test_separately=True,)
cxx_test(
    name="result-test",
    srcs=["result-test.cc",],
    deps=[":core",],
    run_test_separately=True,)
cxx_test(
    name="request_converter-test",
    srcs=["request_converter-test.cc",],
    deps=[
        ":core",
        "//connection:connection",
        "//if:if",
    ],
    run_test_separately=True,)
cxx_test(
    name="client-test",
    srcs=["client-test.cc",],
    deps=[
        ":core",
        "//if:if",
        "//serde:serde",
        "//test-util:test-util",
    ],
    run_test_separately=True,)
cxx_binary(
    name="simple-client",
    srcs=["simple-client.cc",],
    deps=[":core", "//connection:connection"],)
